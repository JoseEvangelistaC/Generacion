@using Generacion.Models.DatosConsola;
@using Microsoft.AspNetCore.Html;
@using System.Text;
@using Microsoft.AspNetCore.Razor.TagHelpers;

@{

    Dictionary<int, List<string>> datoHorario = ViewData["horarioOperarios"] as Dictionary<int, List<string>>;

    List<string> mañana = datoHorario.ContainsKey(1) ? datoHorario[1] : new List<string>();
    List<string> tarde = datoHorario.ContainsKey(2) ? datoHorario[2] : new List<string>();
    List<string> noche = datoHorario.ContainsKey(3) ? datoHorario[3] : new List<string>();

    bool activar = true;
    List<int> horasGenerador = new List<int>
    {
        4,8,12,16,20,0
    };

    List<int> horasEG = new List<int>
    {
        2,4,6,8,10,12,14,16,18,20,22,0
    };

    List<int> baa901 = new List<int>
    {
        6,12,18,0
    };

    FormatoConsola datoFormato = ViewData["datoFormato"] as FormatoConsola;
    //List<DatosFormatoConsola> energiaGenerada = ViewData["EnergiaGenerada1"] as List<DatosFormatoConsola>;
    Dictionary<string, List<DatosFormatoConsola>> energiaGenerada = ViewData["EnergiaGenerada"] as Dictionary<string, List<DatosFormatoConsola>>;
    List<DatosFormatoConsola> energiaGeneradaBAA = ViewData["EnergiaGeneradaBAA"] as List<DatosFormatoConsola>;
    List<TiposDeRegistroConsola> detalleRegistro = ViewData["TipoRegistros"] as List<TiposDeRegistroConsola>;
    Dictionary<string, CabecerasTabla> detalleCabeceras = ViewData["Datoscabecera"] as Dictionary<string, CabecerasTabla>;
    Dictionary<string, List<RegistrosDatosGenerator>> datosGenerador = ViewData["DatosGenerador"] as Dictionary<string, List<RegistrosDatosGenerator>>;
    Dictionary<string, List<RegistrosDatosEngine>> datosEngine = ViewData["DatosEng"] as Dictionary<string, List<RegistrosDatosEngine>>;

    Dictionary<string, LecturasMedianoche> lecturasMedianoche = ViewData["datosLecturas"] as Dictionary<string, LecturasMedianoche>;

    List<OutGoingFeeder> datosDelived = ViewData["datosDelived"] as List<OutGoingFeeder>;
    List<OutGoingFeeder> datosReceived = ViewData["datosReceived"] as List<OutGoingFeeder>;



    var EG01 = detalleRegistro.Where(x => x.IdRegistroConsola == "EG01").Select(x => x).FirstOrDefault();
    var EG02 = detalleRegistro.Where(x => x.IdRegistroConsola == "EG02").Select(x => x).FirstOrDefault();

    var Generator1 = detalleRegistro.Where(x => x.IdRegistroConsola == "Generator1").Select(x => x).FirstOrDefault();
    var Generator2 = detalleRegistro.Where(x => x.IdRegistroConsola == "Generator2").Select(x => x).FirstOrDefault();

    var Engine1 = detalleRegistro.Where(x => x.IdRegistroConsola == "Engine1").Select(x => x).FirstOrDefault();
    var Engine2 = detalleRegistro.Where(x => x.IdRegistroConsola == "Engine2").Select(x => x).FirstOrDefault();

    var BAA1 = detalleRegistro.Where(x => x.IdRegistroConsola == "BAA901-Station").Select(x => x).FirstOrDefault();
    var BAA2 = detalleRegistro.Where(x => x.IdRegistroConsola == "BFA901-VAMP96").Select(x => x).FirstOrDefault();
    var BAO = detalleRegistro.Where(x => x.IdRegistroConsola == "BAO901").Select(x => x).FirstOrDefault();

    var LecMedianoche = detalleRegistro.Where(x => x.IdRegistroConsola == "LecMedianoche").Select(x => x).FirstOrDefault();
    // var date = new DateTime(2023, 10, 16, 23, 0, 0);
    var date = DateTime.Now;
    bool tiempoMedianoche = false;
    var horaSplit = date.ToString("HH").Split(':');

    if (int.Parse(horaSplit[0]) < 2)
    {
        tiempoMedianoche = true;
    }


    Func<List<string>, int, IHtmlContent> MostrarTurno = (operarios, maxOperarios) =>
                   {
                       StringBuilder sb = new StringBuilder();
                       int cantidadDeDatos = 0;

                       foreach (string operario in operarios)
                       {
                           cantidadDeDatos++;
                           if (cantidadDeDatos == maxOperarios)
                           {
                               sb.Append($"   /   {operario} ");
                           }
                           else
                           {
                               sb.Append($"{operario}");
                           }
                       }

                       if (cantidadDeDatos == 0)
                       {
                           return new HtmlString("<p>             /             </p>");
                       }
                       else
                       {
                           return new HtmlString($"<p>{sb.ToString()}</p>");
                       }
                   };

    Func<int, List<DatosFormatoConsola>, IHtmlContent> GenerateDataCells = (count, datos) =>
        {
            var content = new DefaultTagHelperContent();

            for (int i = 1; i <= count; i++)
            {
                var rowData = datos.Count > 0 ? datos[i - 1] : null;
                string horaVista = i + i == 24 ? "00" : (i + i).ToString();

                int horaFormateada = i == 12 ? 0 : i;

                string pisicionClass = int.Parse(date.Hour.ToString()) == horaFormateada + horaFormateada || int.Parse(date.Hour.ToString()) == horaFormateada + horaFormateada + 1
            ? "posicicion-actual" : "";

                var trContent = rowData != null
         ? $@"
                        <tr class='{pisicionClass}' id='{rowData.IdDetalleConsola}' claveRegistro='{rowData.Fila}'>
                            <td>{horaVista}:00</td>
                            <td id='P'><input type='number' value='{rowData.PotenciaActiva}'></td>
                            <td id='Q'><input type='number' value='{rowData.PotenciaReactiva}'></td>
                            <td id='E+'><input type='number' value='{rowData.EnergiaActiva}'></td>
                            <td id='Eq+'><input type='number' value='{rowData.EnergiaReactiva}'></td>
                            <td id='lL1'><input type='number' value='{rowData.CorrienteLinea1}'></td>
                            <td id='lL2'><input type='number' value='{rowData.CorrienteLinea2}'></td>
                            <td id='lL3'><input type='number' value='{rowData.CorrienteLinea3}'></td>
                            <td id='U12'><input type='number' value='{rowData.Voltaje}'></td>
                            <td id='U23'><input type='number' value='{rowData.Voltaje23}'></td>
                            <td id='U31'><input type='number' value='{rowData.Voltaje31}'></td>
                        </tr>"
         : $@"
                        <tr class='{pisicionClass}' claveRegistro='{i + i}'>
                            <td id='idHora'>{horaVista}:00</td>
                            <td id='P'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='Q'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='E+'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='Eq+'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='lL1'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='lL2'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='lL3'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='U12'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='U23'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='U31'><input type='number' claveRegistro='{i}' value= '0'></td>
                        </tr>";

                content.AppendHtml(trContent);
            }

            return content;
        };

    /********************************************/
    Func<int, List<RegistrosDatosGenerator>, IHtmlContent> GenerateDataCellsGEN = (count, datos) =>
       {
           var content = new DefaultTagHelperContent();

           for (int i = 1; i <= count; i++)
           {
               var rowData = datos.Count > 0 ? datos[i - 1] : null;
               string horaVista = i + i == 24 ? "00" : (i + i).ToString();

               int horaFormateada = i == 12 ? 0 : i;

               string pisicionClass = int.Parse(date.Hour.ToString()) == horaFormateada + horaFormateada || int.Parse(date.Hour.ToString()) == horaFormateada + horaFormateada + 1
            ? "posicicion-actual" : "";

               var trContent = rowData != null
                    ? $@"
                        <tr class='{pisicionClass}' claveRegistro='{i + i}'>
                            <td id='idHoraGen2'>{horaVista}:00</td>
                            <td id='L1'><input type='number' value='{rowData.L1}'></td>
                            <td id='L2'><input type='number' value='{rowData.L2}'></td>
                            <td id='L3'><input type='number' value='{rowData.L3}'></td>
                            <td id='D'><input type='number' value='{rowData.D}'></td>
                            <td id='ND'><input type='number' value='{rowData.ND}'></td>
                            <td id='TV'><input type='number' value='{rowData.TersionalVibration}'></td>
                       </tr>"
                    : $@"
                        <tr class='{pisicionClass}' claveRegistro='{i + i}'>
                            <td id='idHoraGen2'>{horaVista}:00</td>
                            <td id='L1'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='L2'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='L3'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='D'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='ND'><input type='number' claveRegistro='{i}' value= '0'></td>
                            <td id='TV'><input type='number' claveRegistro='{i}' value= '0'></td>
                       </tr>";

               content.AppendHtml(trContent);
           }

           return content;
       };

    Func<int, List<RegistrosDatosGenerator>, IHtmlContent> GenerateDataCellsGENOIL = (count, datos) =>
        {
            var content = new DefaultTagHelperContent();

            for (int i = 1; i <= count; i++)
            {
                var rowData = datos.Count > 0 ? datos.ElementAtOrDefault(i - 1) : null;

                string horaVista = (i + i) % 24 == 0 ? "00" : (i + i).ToString("D2");

                DetGeneratorTC datosTCA = null;
                DetGeneratorTC datosTCB = null;
                if (rowData != null)
                {
                    datosTCA = rowData.detalleGeneradores?["TCA"];
                    datosTCB = rowData.detalleGeneradores?["TCB"];
                }

                string pisicionClass = int.Parse(date.Hour.ToString()) == (i + i) % 24 || int.Parse(date.Hour.ToString()) == (i + i + 1) % 24
            ? "posicicion-actual" : "";

                var trContent = rowData != null
            ? $@"
                <tr id='row-{i}'  class='{pisicionClass}' claveRegistro='{i + i}'>
                    <td id='TO-A'><input type='number' claveRegistro='{i}' value= '{datosTCA.TempOut}'></td>
                    <td id='Sp-A'><input type='number' claveRegistro='{i}' value='{datosTCA.Speed}'></td>
                    <td id='TO-B'><input type='number' claveRegistro='{i}' value='{datosTCB.TempOut}'></td>
                    <td id='Sp-B'><input type='number' claveRegistro='{i}' value='{datosTCB.Speed}'></td>
                </tr>"
            : $@"
                <tr id='row-{i}' class='{pisicionClass}' claveRegistro='{i + i}'>
                    <td id='TO-A'><input type='number' claveRegistro='{i}' value= '0'></td>
                    <td id='Sp-A'><input type='number' claveRegistro='{i}' value= '0'></td>
                    <td id='TO-B'><input type='number' claveRegistro='{i}' value= '0'></td>
                    <td id='Sp-B'><input type='number' claveRegistro='{i}' value= '0'></td>
                </tr>";

                content.AppendHtml(trContent);
            }

            return content;
        };

    /********************************************/

    Func<int, List<RegistrosDatosEngine>, IHtmlContent> GenerateDataEngine = (count, datos) =>
          {
              var content = new DefaultTagHelperContent();

              for (int i = 1; i <= count; i++)
              {
                  var rowData = datos.Count > 0 ? datos[i - 1] : null;
                  string horaVista = i + i == 24 ? "00" : (i + i).ToString();

                  int horaFormateada = i == 12 ? 0 : i;

                  string pisicionClass = int.Parse(date.Hour.ToString()) == horaFormateada + horaFormateada || int.Parse(date.Hour.ToString()) == horaFormateada + horaFormateada + 1
                    ? "posicicion-actual" : "";

                  DetalleEngine detalleEngineFuel = null;
                  DetalleEngine detalleEngineOil = null;

                  if (rowData != null)
                  {
                      detalleEngineFuel = rowData.detalleEngine["FUEL"];
                      detalleEngineOil = rowData.detalleEngine["OIL"];
                  }

                  var trContent = rowData != null
                   ? $@"
                                <tr class='{pisicionClass}' id='{rowData.IdDetEngineConsola}' claveRegistro='{i + i}'>
                                   <th style='width: 10%;'>{horaVista}:00</th>
                                   <td id='Run-H'><input type='number' value='{rowData.RunHours}'></td>
                                   <td id='P-F'><input type='number' value='{detalleEngineFuel.Presion}'></td>
                                   <td id='T-F'><input type='number' value='{detalleEngineFuel.Temp}'></td>
                                   <td id='P-O'><input type='number' value='{detalleEngineOil.Presion}'></td>
                                   <td id='T-O'><input type='number' value='{detalleEngineOil.Temp}'></td>
                                   <td id='CA-T'><input type='number' value='{rowData.CATemp}'></td>
                                   <td id='Diff-P'><input type='number' value='{rowData.DiffPressJetPulse}'></td>
                                   <td id='Ca-P'><input type='number' value='{rowData.CAPress}'></td>
                                   <td id='Ex-G'><input type='number' value='{rowData.ExhGasAvgTemp}'></td>
                                   <td id='Cy-P'><input type='number' value='{rowData.CylPressAvg}'></td>
                                </tr>"
                   : $@"
                                 <tr class='{pisicionClass}' claveRegistro='{i + i}'>
                                            <th style='width: 10%;' id='idHora'>{horaVista}:00</th>
                                            <td id='Run-H'><input type='number' /></td>
                                            <td id='P-F'><input type='number' /></td>
                                            <td id='T-F'><input type='number' /></td>
                                            <td id='P-O'><input type='number' /></td>
                                            <td id='T-O'><input type='number' /></td>
                                            <td id='CA-T'><input type='number' /></td>
                                            <td id='Diff-P'><input type='number' /></td>
                                            <td id='Ca-P'><input type='number' /></td>
                                            <td id='Ex-G'><input type='number' /></td>
                                            <td id='Cy-P'><input type='number' /></td>
                                        </tr>";

                  content.AppendHtml(trContent);
              }

              return content;
          };


}

<style>
    .posicicion-actual td {
        background: #C5C5C5;
    }

    .lectura input {
        width: 130px;
        height: 26px;
    }

    .lectura span {
        width: 165px;
        padding: 0px 35px 0 35px;
        margin-bottom: 1rem;
        color: #858796;
    }

    .lectura {
        display: flex;
        border: 1px solid #e3e6f0;
    }

        .lectura div {
            width: 40%;
            border: 1px solid #e3e6f0;
        }

    .EG td {
        width: 65px !important;
        text-align: center;
    }

    .LM td {
        width: 115px !important;
        text-align: center;
    }

    .EG input {
        width: 65px !important;
    }

    .EG th {
        text-align-last: center;
        font-weight: bold;
        text-align: center;
        vertical-align: middle;
    }

    .title-table {
        text-align-last: center;
        background: gainsboro;
        font-weight: bold;
        font-size: 20px;
    }

    .content-report {
        border: solid;
        padding: 40px;
    }

    .row {
        margin-right: inherit;
        margin-left: inherit;
    }

    .subTitulo-consola {
        text-align: inherit;
        font-size: 20px;
        font-weight: bold;
        padding: 0 0 0 10px;
        background: darkgray;
    }

    .btnMostrarGE {
        border-block-end-color: red;
    }

    .btnMostrarGE1 {
        display: none;
    }

    .table thead th {
        vertical-align: middle;
    }

    .table td, .table th {
        padding: .30rem;
    }
</style>

<div class="header-detail-report">
    <div class="title-report col-md-12">
        <h2>Central Termica Luren</h2>
        <h3 style="font-size: inherit;">LECTURAS DE CONSOLA</h3>
    </div>
    <div class="row">
        <div class="col-md-6" style="display: flow;">
            <img class="image-logo" src="./img/logo_elec.png" />
        </div>
        <div class="col-md-6">
            <div>
                <p>Versión 00 ELD-CTL-OM002</p>
            </div>
            <div>
                <p1>Fecha</p1>
                @{
                    <p>@date.ToString("dd/MM/yyyy")</p>
                }
            </div>
            <div class="subTitulo-consola">
                <p1 style="text-align: inherit;">Operadores</p1>
            </div>
            <div>
                <p1>Turno 1</p1>
                @MostrarTurno(mañana,2)
            </div>
            <div>
                <p1>Turno 2</p1>
                @MostrarTurno(tarde,2)
            </div>
            <div>
                <p1>Turno 3</p1>
                @MostrarTurno(noche,2)
            </div>
        </div>
    </div>
</div>
<div style="text-align: right;">
    <button class="btn btn-primary " id="GuardarDatos">Guardar Datos</button>
    <button style="display:none;" class="btn btn-primary " id="GuardarDatos2">Guardar Datos</button>
</div>
<div>
    <button class="btn btn-light btnMostrarGE btnMostrarGE1" id="EG1">EG01</button>
    <button class="btn btn-light btnMostrarGE" id="EG2">EG02</button>
</div>
<div class="console-content">
    <div id="datos-EG1">
        <div style="padding :10px;">
            <div class="title-table principal1">
                <p id="idRegistro" claveRegistro='@EG01.IdRegistroConsola'>@EG01.TipoRegistro</p>
            </div>
            <table class="table table-bordered EG boton1" id="tabla-EG1">
                <thead>
                    <tr>
                        <th>HORA</th>
                        <th data-info='@detalleCabeceras["P"].Descripcion' id=@detalleCabeceras["P"].IdTipoEngine>@detalleCabeceras["P"].Detalle</th>
                        <th data-info='@detalleCabeceras["Q"].Descripcion' id=@detalleCabeceras["Q"].IdTipoEngine>@detalleCabeceras["Q"].Detalle</th>
                        <th data-info='@detalleCabeceras["EA"].Descripcion' id=@detalleCabeceras["EA"].IdTipoEngine>@detalleCabeceras["EA"].Detalle</th>
                        <th data-info='@detalleCabeceras["Eq"].Descripcion' id=@detalleCabeceras["Eq"].IdTipoEngine>@detalleCabeceras["Eq"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL1"].Descripcion' id=@detalleCabeceras["IL1"].IdTipoEngine>@detalleCabeceras["IL1"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL2"].Descripcion' id=@detalleCabeceras["IL2"].IdTipoEngine>@detalleCabeceras["IL2"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL3"].Descripcion' id=@detalleCabeceras["IL3"].IdTipoEngine>@detalleCabeceras["IL3"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>@detalleCabeceras["U12"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U23</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U31</th>
                    </tr>
                </thead>
                <tbody>
                    @GenerateDataCells(12, energiaGenerada["EG01"])
                </tbody>
            </table>
        </div>
        <div id="tabla-Generator1">
            <div class="title-table principal2">
                <p id="idRegistroGen" claveRegistro='@Generator1.IdRegistroConsola'>@Generator1.TipoRegistro</p>
            </div>
            <div style="display: flex;">
                <table class="table table-bordered EG boton2">
                    <thead>
                        <tr style="height: 69px;">
                            <th>HORA</th>
                            <th data-info='@detalleCabeceras["L1"].Descripcion' id=@detalleCabeceras["L1"].IdTipoEngine>@detalleCabeceras["L1"].Detalle</th>
                            <th data-info='@detalleCabeceras["L2"].Descripcion' id=@detalleCabeceras["L2"].IdTipoEngine>@detalleCabeceras["L2"].Detalle</th>
                            <th data-info='@detalleCabeceras["L3"].Descripcion' id=@detalleCabeceras["L3"].IdTipoEngine>@detalleCabeceras["L3"].Detalle</th>
                            <th data-info='@detalleCabeceras["D"].Descripcion' id=@detalleCabeceras["D"].IdTipoEngine>@detalleCabeceras["D"].Detalle</th>
                            <th data-info='@detalleCabeceras["ND"].Descripcion' id=@detalleCabeceras["ND"].IdTipoEngine>@detalleCabeceras["ND"].Detalle</th>
                            <th data-info='@detalleCabeceras["Torsion-V"].Descripcion' id=@detalleCabeceras["Torsion-V"].IdTipoEngine>@detalleCabeceras["Torsion-V"].Detalle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @GenerateDataCellsGEN(12, datosGenerador["Generator1"])
                    </tbody>
                </table>

                <table class="table table-bordered EG boton2">
                    <thead>
                        <tr>
                            <th data-info='@detalleCabeceras["TCA"].Descripcion' colspan="2" id=@detalleCabeceras["TCA"].IdTipoEngine>@detalleCabeceras["TCA"].Detalle</th>
                            <th data-info='@detalleCabeceras["TCB"].Descripcion' colspan="2" id=@detalleCabeceras["TCB"].IdTipoEngine>@detalleCabeceras["TCB"].Detalle</th>
                        </tr>
                        <tr>
                            <th data-info='@detalleCabeceras["TpOut-A"].Descripcion' id=@detalleCabeceras["TpOut-A"].IdTipoEngine>@detalleCabeceras["TpOut-A"].Detalle</th>
                            <th data-info='@detalleCabeceras["Speed-A"].Descripcion' id=@detalleCabeceras["Speed-A"].IdTipoEngine>@detalleCabeceras["Speed-A"].Detalle</th>
                            <th data-info='@detalleCabeceras["TpOut-B"].Descripcion' id=@detalleCabeceras["TpOut-B"].IdTipoEngine>@detalleCabeceras["TpOut-B"].Detalle</th>
                            <th data-info='@detalleCabeceras["Speed-B"].Descripcion' id=@detalleCabeceras["Speed-B"].IdTipoEngine>@detalleCabeceras["Speed-B"].Detalle</th>
                        </tr>
                    </thead>
                    <tbody id="tc">
                        @GenerateDataCellsGENOIL(12, datosGenerador["Generator1"])
                    </tbody>
                </table>
            </div>
        </div>

        <div id="Engine1">
            <div class="title-table principal3">
                <p id="idRegistroEng" claveRegistro='@Engine1.IdRegistroConsola'>@Engine1.TipoRegistro</p>
            </div>
            <div style="display: flex;">
                <table class="table table-bordered EG boton3" style="white-space: nowrap;">
                    <thead>
                        <tr>
                            <th rowspan="2">HORA</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Run-Hours"].Descripcion' id=@detalleCabeceras["Run-Hours"].IdTipoEngine>@detalleCabeceras["Run-Hours"].Detalle</th>
                            <th colspan="2" data-info='@detalleCabeceras["Fuel"].Descripcion' id=@detalleCabeceras["Fuel"].IdTipoEngine>@detalleCabeceras["Fuel"].Detalle</th>
                            <th colspan="2" data-info='@detalleCabeceras["Oil"].Descripcion' id=@detalleCabeceras["Oil"].IdTipoEngine>@detalleCabeceras["Oil"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Cooling"].Descripcion' id=@detalleCabeceras["Cooling"].IdTipoEngine>@detalleCabeceras["Cooling"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Diff-P-J-P"].Descripcion' id=@detalleCabeceras["Diff-P-J-P"].IdTipoEngine>@detalleCabeceras["Diff-P-J-P"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Ca-Press"].Descripcion' id=@detalleCabeceras["Ca-Press"].IdTipoEngine>@detalleCabeceras["Ca-Press"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Ex-G-A-T"].Descripcion' id=@detalleCabeceras["Ex-G-A-T"].IdTipoEngine>@detalleCabeceras["Ex-G-A-T"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Cy-P-A"].Descripcion' id=@detalleCabeceras["Cy-P-A"].IdTipoEngine>@detalleCabeceras["Cy-P-A"].Detalle</th>
                        </tr>
                        <tr>
                            <th data-info='@detalleCabeceras["Presion-F"].Descripcion' id=@detalleCabeceras["Presion-F"].IdTipoEngine>@detalleCabeceras["Presion-F"].Detalle</th>
                            <th data-info='@detalleCabeceras["Temp-F"].Descripcion' id=@detalleCabeceras["Temp-F"].IdTipoEngine>@detalleCabeceras["Temp-F"].Detalle</th>
                            <th data-info='@detalleCabeceras["Presion-O"].Descripcion' id=@detalleCabeceras["Presion-O"].IdTipoEngine>@detalleCabeceras["Presion-O"].Detalle</th>
                            <th data-info='@detalleCabeceras["Temp-O"].Descripcion' id=@detalleCabeceras["Temp-O"].IdTipoEngine>@detalleCabeceras["Temp-O"].Detalle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @GenerateDataEngine(12,datosEngine["Engine1"])
                    </tbody>
                </table>
            </div>
        </div>

        <div style="padding :10px;">
            <div class="title-table principal4">
                <p id="idRegistroBaa" claveRegistro='@BAA1.IdRegistroConsola'>@BAA1.TipoRegistro</p>
            </div>
            <table class="table table-bordered EG boton4" id="tabla-Baa">
                <thead>
                    <tr>
                        <th>HORA</th>
                        <th data-info='@detalleCabeceras["P"].Descripcion' id=@detalleCabeceras["P"].IdTipoEngine>@detalleCabeceras["P"].Detalle</th>
                        <th data-info='@detalleCabeceras["Q"].Descripcion' id=@detalleCabeceras["Q"].IdTipoEngine>@detalleCabeceras["Q"].Detalle</th>
                        <th data-info='@detalleCabeceras["EA"].Descripcion' id=@detalleCabeceras["EA"].IdTipoEngine>@detalleCabeceras["EA"].Detalle</th>
                        <th data-info='@detalleCabeceras["Eq"].Descripcion' id=@detalleCabeceras["Eq"].IdTipoEngine>@detalleCabeceras["Eq"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL1"].Descripcion' id=@detalleCabeceras["IL1"].IdTipoEngine>@detalleCabeceras["IL1"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL2"].Descripcion' id=@detalleCabeceras["IL2"].IdTipoEngine>@detalleCabeceras["IL2"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL3"].Descripcion' id=@detalleCabeceras["IL3"].IdTipoEngine>@detalleCabeceras["IL3"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>@detalleCabeceras["U12"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U23</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U31</th>
                    </tr>
                </thead>
                <tbody>
                    @GenerateDataCells(12, energiaGenerada["BAA901"])
                </tbody>
            </table>
        </div>

    </div>
    <div style="display:none;" id="datos-EG2">

        <div style="padding :10px;">
            <div class="title-table principal5">
                <p id="idRegistro2" claveRegistro='@EG02.IdRegistroConsola'>@EG02.TipoRegistro</p>
            </div>
            <table class="table table-bordered EG boton5" id="tabla-EG2">
                <thead>
                    <tr>
                        <th>HORA</th>
                        <th data-info='@detalleCabeceras["P"].Descripcion' id=@detalleCabeceras["P"].IdTipoEngine>@detalleCabeceras["P"].Detalle</th>
                        <th data-info='@detalleCabeceras["Q"].Descripcion' id=@detalleCabeceras["Q"].IdTipoEngine>@detalleCabeceras["Q"].Detalle</th>
                        <th data-info='@detalleCabeceras["EA"].Descripcion' id=@detalleCabeceras["EA"].IdTipoEngine>@detalleCabeceras["EA"].Detalle</th>
                        <th data-info='@detalleCabeceras["Eq"].Descripcion' id=@detalleCabeceras["Eq"].IdTipoEngine>@detalleCabeceras["Eq"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL1"].Descripcion' id=@detalleCabeceras["IL1"].IdTipoEngine>@detalleCabeceras["IL1"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL2"].Descripcion' id=@detalleCabeceras["IL2"].IdTipoEngine>@detalleCabeceras["IL2"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL3"].Descripcion' id=@detalleCabeceras["IL3"].IdTipoEngine>@detalleCabeceras["IL3"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>@detalleCabeceras["U12"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U23</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U31</th>
                    </tr>
                </thead>
                <tbody>
                    @GenerateDataCells(12, energiaGenerada["EG02"])
                </tbody>
            </table>
        </div>

        <div id="tabla-Generator2">
            <div class="title-table principal5">
                <p id="idRegistroGen2" claveRegistro='@Generator2.IdRegistroConsola'>@Generator2.TipoRegistro</p>
            </div>
            <div style="display: flex;">
                <table class="table table-bordered EG boton 5">
                    <thead>
                        <tr style="height: 69px;">
                            <th>HORA</th>
                            <th data-info='@detalleCabeceras["L1"].Descripcion' id=@detalleCabeceras["L1"].IdTipoEngine>@detalleCabeceras["L1"].Detalle</th>
                            <th data-info='@detalleCabeceras["L2"].Descripcion' id=@detalleCabeceras["L2"].IdTipoEngine>@detalleCabeceras["L2"].Detalle</th>
                            <th data-info='@detalleCabeceras["L3"].Descripcion' id=@detalleCabeceras["L3"].IdTipoEngine>@detalleCabeceras["L3"].Detalle</th>
                            <th data-info='@detalleCabeceras["D"].Descripcion' id=@detalleCabeceras["D"].IdTipoEngine>@detalleCabeceras["D"].Detalle</th>
                            <th data-info='@detalleCabeceras["ND"].Descripcion' id=@detalleCabeceras["ND"].IdTipoEngine>@detalleCabeceras["ND"].Detalle</th>
                            <th data-info='@detalleCabeceras["Torsion-V"].Descripcion' id=@detalleCabeceras["Torsion-V"].IdTipoEngine>@detalleCabeceras["Torsion-V"].Detalle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @GenerateDataCellsGEN(12, datosGenerador["Generator2"])
                    </tbody>
                </table>

                <table class="table table-bordered EG principal boton5">
                    <thead>
                        <tr>
                            <th data-info='@detalleCabeceras["TCA"].Descripcion' colspan="2" id=@detalleCabeceras["TCA"].IdTipoEngine>@detalleCabeceras["TCA"].Detalle</th>
                            <th data-info='@detalleCabeceras["TCB"].Descripcion' colspan="2" id=@detalleCabeceras["TCB"].IdTipoEngine>@detalleCabeceras["TCB"].Detalle</th>
                        </tr>
                        <tr>
                            <th data-info='@detalleCabeceras["TpOut-A"].Descripcion' id=@detalleCabeceras["TpOut-A"].IdTipoEngine>@detalleCabeceras["TpOut-A"].Detalle</th>
                            <th data-info='@detalleCabeceras["Speed-A"].Descripcion' id=@detalleCabeceras["Speed-A"].IdTipoEngine>@detalleCabeceras["Speed-A"].Detalle</th>
                            <th data-info='@detalleCabeceras["TpOut-B"].Descripcion' id=@detalleCabeceras["TpOut-B"].IdTipoEngine>@detalleCabeceras["TpOut-B"].Detalle</th>
                            <th data-info='@detalleCabeceras["Speed-B"].Descripcion' id=@detalleCabeceras["Speed-B"].IdTipoEngine>@detalleCabeceras["Speed-B"].Detalle</th>
                        </tr>
                    </thead>
                    <tbody id="tc">
                            @GenerateDataCellsGENOIL(12, datosGenerador["Generator2"])
                    </tbody>
                </table>
            </div>
        </div>

        <div id="Engine2">
            <div class="title-table">
                <p id="idRegistroEng2" claveRegistro='@Engine2.IdRegistroConsola'>@Engine2.TipoRegistro</p>
            </div>
            <div style="display: flex;">
                <table class="table table-bordered EG" style="white-space: nowrap;">
                    <thead>
                        <tr>
                            <th rowspan="2">HORA</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Run-Hours"].Descripcion' id=@detalleCabeceras["Run-Hours"].IdTipoEngine>@detalleCabeceras["Run-Hours"].Detalle</th>
                            <th colspan="2" data-info='@detalleCabeceras["Fuel"].Descripcion' id=@detalleCabeceras["Fuel"].IdTipoEngine>@detalleCabeceras["Fuel"].Detalle</th>
                            <th colspan="2" data-info='@detalleCabeceras["Oil"].Descripcion' id=@detalleCabeceras["Oil"].IdTipoEngine>@detalleCabeceras["Oil"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Cooling"].Descripcion' id=@detalleCabeceras["Cooling"].IdTipoEngine>@detalleCabeceras["Cooling"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Diff-P-J-P"].Descripcion' id=@detalleCabeceras["Diff-P-J-P"].IdTipoEngine>@detalleCabeceras["Diff-P-J-P"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Ca-Press"].Descripcion' id=@detalleCabeceras["Ca-Press"].IdTipoEngine>@detalleCabeceras["Ca-Press"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Ex-G-A-T"].Descripcion' id=@detalleCabeceras["Ex-G-A-T"].IdTipoEngine>@detalleCabeceras["Ex-G-A-T"].Detalle</th>
                            <th rowspan="2" data-info='@detalleCabeceras["Cy-P-A"].Descripcion' id=@detalleCabeceras["Cy-P-A"].IdTipoEngine>@detalleCabeceras["Cy-P-A"].Detalle</th>
                        </tr>
                        <tr>
                            <th data-info='@detalleCabeceras["Presion-F"].Descripcion' id=@detalleCabeceras["Presion-F"].IdTipoEngine>@detalleCabeceras["Presion-F"].Detalle</th>
                            <th data-info='@detalleCabeceras["Temp-F"].Descripcion' id=@detalleCabeceras["Temp-F"].IdTipoEngine>@detalleCabeceras["Temp-F"].Detalle</th>
                            <th data-info='@detalleCabeceras["Presion-O"].Descripcion' id=@detalleCabeceras["Presion-O"].IdTipoEngine>@detalleCabeceras["Presion-O"].Detalle</th>
                            <th data-info='@detalleCabeceras["Temp-O"].Descripcion' id=@detalleCabeceras["Temp-O"].IdTipoEngine>@detalleCabeceras["Temp-O"].Detalle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @GenerateDataEngine(12,datosEngine["Engine2"])
                    </tbody>
                </table>
            </div>
        </div>

        <div style="padding :10px;">
            <div class="title-table">
                <p id="idRegistroBaa2" claveRegistro='@BAA2.IdRegistroConsola'>@BAA2.TipoRegistro</p>
            </div>
            <table class="table table-bordered EG" id="tabla-Baa2">
                <thead>
                    <tr>
                        <th>HORA</th>
                        <th data-info='@detalleCabeceras["P"].Descripcion' id=@detalleCabeceras["P"].IdTipoEngine>@detalleCabeceras["P"].Detalle</th>
                        <th data-info='@detalleCabeceras["Q"].Descripcion' id=@detalleCabeceras["Q"].IdTipoEngine>@detalleCabeceras["Q"].Detalle</th>
                        <th data-info='@detalleCabeceras["EA"].Descripcion' id=@detalleCabeceras["EA"].IdTipoEngine>@detalleCabeceras["EA"].Detalle</th>
                        <th data-info='@detalleCabeceras["Eq"].Descripcion' id=@detalleCabeceras["Eq"].IdTipoEngine>@detalleCabeceras["Eq"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL1"].Descripcion' id=@detalleCabeceras["IL1"].IdTipoEngine>@detalleCabeceras["IL1"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL2"].Descripcion' id=@detalleCabeceras["IL2"].IdTipoEngine>@detalleCabeceras["IL2"].Detalle</th>
                        <th data-info='@detalleCabeceras["IL3"].Descripcion' id=@detalleCabeceras["IL3"].IdTipoEngine>@detalleCabeceras["IL3"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>@detalleCabeceras["U12"].Detalle</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U23</th>
                        <th data-info='@detalleCabeceras["U12"].Descripcion' id=@detalleCabeceras["U12"].IdTipoEngine>U31</th>
                    </tr>
                </thead>
                <tbody>
                    @GenerateDataCells(12, energiaGenerada["BFA901"])
                </tbody>
            </table>
        </div>
    </div>

    <div>
        <div class="title-table">
            <p id="idRegistroBAO" claveRegistro='@BAO.IdRegistroConsola'>@BAO.TipoRegistro</p>
        </div>
        <table class="table table-bordered EG" id="">
            <tr>
                <th rowspan="2">HORA</th>
                <th colspan="2" data-info='@detalleCabeceras["Delivered"].Descripcion' id=@detalleCabeceras["Delivered"].IdTipoEngine>@detalleCabeceras["Delivered"].Detalle</th>
                <th colspan="2" data-info='@detalleCabeceras["Recived"].Descripcion' id=@detalleCabeceras["Recived"].IdTipoEngine>@detalleCabeceras["Recived"].Detalle</th>
            </tr>
            <tr>
                <th data-info='@detalleCabeceras["kwh"].Descripcion' id=@detalleCabeceras["kwh"].IdTipoEngine>@detalleCabeceras["kwh"].Detalle</th>
                <th data-info='@detalleCabeceras["kvarh"].Descripcion' id=@detalleCabeceras["kvarh"].IdTipoEngine>@detalleCabeceras["kvarh"].Detalle</th>
                <th data-info='@detalleCabeceras["kwh"].Descripcion' id=@detalleCabeceras["kwh"].IdTipoEngine>@detalleCabeceras["kwh"].Detalle</th>
                <th data-info='@detalleCabeceras["kvarh"].Descripcion' id=@detalleCabeceras["kvarh"].IdTipoEngine>@detalleCabeceras["kvarh"].Detalle</th>
            </tr>
            @{
                if (datosDelived.Count != 0)
                {
                    var horaSiguiente = baa901.Count == datosDelived.Count
                    ? baa901[datosDelived.Count - 1]
                    : baa901[datosDelived.Count];

                    int tamañoDatosBAO = 0;
                    var ultimaHoraGenerador = baa901[datosDelived.Count - 1];
                    var horaSiguienteId = horaSiguiente == 0 ? 24 : horaSiguiente;

                    foreach (OutGoingFeeder item in datosDelived)
                    {
                        string[] horaRegistroSplit = item.Hora.Split(':');
                        //   var horaRegistro = int.Parse(horaRegistroSplit[0]);

                        if (baa901[datosDelived.Count - 1] == int.Parse(horaRegistroSplit[0]))
                        {
                            if ((int.Parse(horaRegistroSplit[0]) == baa901[datosDelived.Count - 1] &&
                            int.Parse(horaRegistroSplit[0]) < horaSiguienteId) &&
                            (tiempoMedianoche || horaRegistroSplit[0] == "0"))
                            {
                                <tr>
                                    <td id="idHoraBao" claveRegistro=@item.Fila>@item.Hora</td>
                                    <td id="de-kwh"><input type="number" value=@item.kWh /></td>
                                    <td id="de-kvarh"><input type="number" value=@item.kVARh /></td>
                                    <td id="re-kwh"><input type="number" value=@datosReceived[tamañoDatosBAO].kWh /></td>
                                    <td id="re-kvarh"><input type="number" value=@datosReceived[tamañoDatosBAO].kVARh /></td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td>@item.Hora</td>
                                    <td>@item.kWh</td>
                                    <td>@item.kVARh</td>
                                    <td>@datosReceived[tamañoDatosBAO].kWh</td>
                                    <td>@datosReceived[tamañoDatosBAO].kVARh</td>
                                </tr>

                                <tr>
                                    <td id="idHoraBao" claveRegistro=@horaSiguienteId>@horaSiguiente:00</td>
                                    <td id="de-kwh"><input type="number" /></td>
                                    <td id="de-kvarh"><input type="number" /></td>
                                    <td id="re-kwh"><input type="number" /></td>
                                    <td id="re-kvarh"><input type="number" /></td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td>@item.Hora</td>
                                <td>@item.kWh</td>
                                <td>@item.kVARh</td>
                                <td>@datosReceived[tamañoDatosBAO].kWh</td>
                                <td>@datosReceived[tamañoDatosBAO].kVARh</td>
                            </tr>
                        }
                        tamañoDatosBAO++;
                    }
                }
                else
                {
                    <tr>
                        <td id="idHoraBao" claveRegistro='6'>6:00</td>
                        <td id="de-kwh"><input type="number" /></td>
                        <td id="de-kvarh"><input type="number" /></td>
                        <td id="re-kwh"><input type="number" /></td>
                        <td id="re-kvarh"><input type="number" /></td>
                    </tr>
                }
            }
        </table>
    </div>

    <div id="lecturasMedianoche">
        <div style="padding :10px;">
            <div class="title-table">
                <p id="idRegistro12" claveRegistro='@LecMedianoche.IdRegistroConsola'>@LecMedianoche.TipoRegistro</p>
            </div>
            <div>

                @{
                    if (lecturasMedianoche != null && lecturasMedianoche.Count() != 0)
                    {

                        foreach (var item in lecturasMedianoche)
                        {
                            <div class="lectura">
                                <div data-info='@detalleCabeceras["GasCon"].Descripcion' id=@detalleCabeceras["GasCon"].IdTipoEngine@item.Value.NumeroEG>
                                    <span> @detalleCabeceras["GasCon"].Detalle@item.Value.NumeroEG &nbsp;</span> <input type="number" value=@item.Value.GasconsumedEG />
                                </div>
                                <div data-info='@detalleCabeceras["EnerProd"].Descripcion' id=@detalleCabeceras["EnerProd"].IdTipoEngine@item.Value.NumeroEG>
                                    <span> @detalleCabeceras["EnerProd"].Detalle@item.Value.NumeroEG &nbsp;</span>
                                    <input type="number" value=@item.Value.GasEnergiaEG />
                                </div>
                                <div data-info='@detalleCabeceras["ReadingToday"].Descripcion' id=@detalleCabeceras["ReadingToday"].IdTipoEngine@item.Value.NumeroEG>
                                    <span> @detalleCabeceras["ReadingToday"].Detalle &nbsp;</span>
                                    <input type="number" value=@item.Value.ReadingToday />
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        for (int i = 1; i <= 2; i++)
                        {
                            <div class="lectura">
                                <div data-info='@detalleCabeceras["GasCon"].Descripcion' id=@detalleCabeceras["GasCon"].IdTipoEngine@i>
                                    <span> @detalleCabeceras["GasCon"].Detalle@i &nbsp;</span>
                                    <input type="number" />
                                </div>
                                <div data-info='@detalleCabeceras["EnerProd"].Descripcion' id=@detalleCabeceras["EnerProd"].IdTipoEngine@i>
                                    <span> @detalleCabeceras["EnerProd"].Detalle@i &nbsp;</span>
                                    <input type="number" />
                                </div>
                                <div data-info='@detalleCabeceras["ReadingToday"].Descripcion' id=@detalleCabeceras["ReadingToday"].IdTipoEngine@i>
                                    <span> @detalleCabeceras["ReadingToday"].Detalle &nbsp;</span>
                                    <input type="number" />
                                </div>
                            </div>
                        }
                    }
                    <div id="observacionesConsola" style="display: flex; padding: 10px 0 0 0;">
                        <span style="padding: 0 10px 0 0;">Observaciones</span>
                        <textarea style="height: 113px; width: 90%;">@datoFormato.Observaciones</textarea>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script>
    function ObtenerDatosFormato() {
        var inputObser = document.getElementById('observacionesConsola').querySelector('textarea');


        var datos = {
            idFormatoConsola: idFormatoConsola,
            Observaciones: inputObser.value,
            Observaciones1: "",
            Observaciones2: "",
            fecha: obtenerFecha("fecha")
        };


        fetch('@Url.Action("GuardarFormato", "DatosConsola")', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(datos)
        })
            .then(function (response) {
                return response.json();

            })
            .then(function (data) {
                if (data.respuesta.idRespuesta === 0 || data.respuesta.idRespuesta === 1) {
                    Swal.fire({
                        title: "Success!!",
                        text: "Se guardaron los datos.",
                        icon: "success",
                        button: "Aww yiss!",
                    });
                    
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.respuesta.mensaje,
                        icon: "error",
                        button: "OK",
                    });
                }
            })
            .catch(function (error) {
                console.error("Error:", error);
            });
    }







    document.getElementById('EG2').addEventListener('click', function () {
        var eg2Element = document.getElementById('EG1');
        var datosEg1 = document.getElementById('datos-EG1');
        var datosEg2 = document.getElementById('datos-EG2');
        var btnGuardar = document.getElementById('GuardarDatos');
        var btnGuardar2 = document.getElementById('GuardarDatos2');


        eg2Element.style.display = (eg2Element.style.display === 'none' || eg2Element.style.display === '') ? 'initial' : 'none';

        this.style.display = 'none';
        datosEg2.style.display = 'initial';
        datosEg1.style.display = 'none';
        btnGuardar.style.display = 'none';
        btnGuardar2.style.display = 'initial';
    });

    document.getElementById('EG1').addEventListener('click', function () {
        var eg2Element = document.getElementById('EG2');
        var datosEg1 = document.getElementById('datos-EG1');
        var datosEg2 = document.getElementById('datos-EG2');
        var btnGuardar = document.getElementById('GuardarDatos');
        var btnGuardar2 = document.getElementById('GuardarDatos2');

        eg2Element.style.display = (eg2Element.style.display === 'none' || eg2Element.style.display === '') ? 'initial' : 'none';

        this.style.display = 'none';
        datosEg2.style.display = 'none';
        datosEg1.style.display = 'initial';
        btnGuardar.style.display = 'initial';
        btnGuardar2.style.display = 'none';
    });


    function ObtenerDatosLectMedianoche() {

        var etiquetaIdRegistro = document.getElementById('idRegistro12');
        var claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');

        for (let i = 1; i <= 2; i++) {
            var inputGas = document.getElementById('GasCon' + i).querySelector('input');
            var inputEnergia = document.getElementById('EnerProd' + i).querySelector('input');
            var inputRead = document.getElementById('ReadingToday' + i).querySelector('input');
            var idLecturas = claveRegistro + '-' + obtenerFecha("format") + '-' + i;

            var datos = {
                IdLecturas: idLecturas,
                NumeroEG: ParseIntEmpty(i),
                GasconsumedEG: parseFloat(inputGas.value),
                GasEnergiaEG: parseFloat(inputEnergia.value),
                ReadingToday: parseFloat(inputRead.value),
                IdFormatoConsola: idFormatoConsola,
            };

            fetch('@Url.Action("GuardarDatosLectMedianoche", "DatosConsola")', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(datos)
            })
                .then(function (response) {
                    return response.json();
                })
                .then(function (data) {
                    if (data.respuesta.idRespuesta === 0 || data.respuesta.idRespuesta === 1) {
                        Swal.fire({
                            title: "Success!!",
                            text: "Se guardaron los datos.",
                            icon: "success",
                            button: "Aww yiss!",
                        });
                        
                    } else {
                        Swal.fire({
                            title: "Error",
                            text: data.respuesta.mensaje,
                            icon: "error",
                            button: "OK",
                        });
                    }
                })
                .catch(function (error) {
                    console.error("Error:", error);
                });
        }
    }






    var idFormatoConsola;
    var botonGuardarDatos = document.getElementById('GuardarDatos');

    botonGuardarDatos.addEventListener('click', function () {
        loader.style.display = 'block';
        var inputs = document.querySelectorAll('input');

        inputs.forEach(function (input) {
            if (input.value.trim() === '') {
                input.value = 0;
            }
        });



        idFormatoConsola = datosOperario.IdSitio + "-ELD-CTL-OM002_" + obtenerFecha("fecha")

        ObtenerDatosInput('tabla-EG1');
        ObtenerDatosInput('tabla-Baa');
        GuardarDatosEnginer('Engine1');
        GuardarDatosGenerador('tabla-Generator1');
        ObtenerDatosLectMedianoche();
        GuardarDatosBAO();
        ObtenerDatosFormato();
        loader.style.display = 'none';
        //location.reload(true);
    });

    var botonGuardarDatos2 = document.getElementById('GuardarDatos2');


    botonGuardarDatos2.addEventListener('click', function () {
        loader.style.display = 'block';
        var inputs = document.querySelectorAll('input');

        inputs.forEach(function (input) {
            if (input.value.trim() === '') {
                input.value = 0;
            }
        });


        idFormatoConsola = datosOperario.IdSitio + "-ELD-CTL-OM002_" + obtenerFecha("fecha")

        ObtenerDatosInput('tabla-EG2');
        ObtenerDatosInput('tabla-Baa2');
        GuardarDatosEnginer('Engine2');
        GuardarDatosGenerador('tabla-Generator2');
        ObtenerDatosLectMedianoche();
        GuardarDatosBAO();
        ObtenerDatosFormato();
        loader.style.display = 'none';
        // location.reload(true);
    });


    function ObtenerDatosInput(tablaId) {

        var etiquetaIdRegistro;
        var claveRegistro;
        var etiquetaIdHora;
        if (tablaId == "tabla-Baa") {
            etiquetaIdRegistro = document.getElementById('idRegistroBaa');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
        }
        if (tablaId == "tabla-EG1") {
            etiquetaIdRegistro = document.getElementById('idRegistro');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
        }
        if (tablaId == "tabla-EG2") {
            etiquetaIdRegistro = document.getElementById('idRegistro2');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
        }
        if (tablaId == "tabla-Baa2") {
            etiquetaIdRegistro = document.getElementById('idRegistroBaa2');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
        }

        var idDetalleConsola = datosOperario.IdSitio + '-' + claveRegistro + '-' + obtenerFecha("format") + '-'
        var idOperario = datosOperario.IdOperario;

        var filas = document.getElementById(tablaId).querySelectorAll('tbody tr');

        var listaDatos = [];
        filas.forEach(function (fila) {
            var claveHora = fila.getAttribute('claveRegistro');
            var idInput = fila.getAttribute('id');

            var inputs = fila.querySelectorAll('td input');

            var dato = {
                potenciaActiva: inputs[0].value,
                potenciaReactiva: inputs[1].value,
                energiaActiva: inputs[2].value,
                energiaReactiva: inputs[3].value,
                corrienteLinea1: inputs[4].value,
                corrienteLinea2: inputs[5].value,
                corrienteLinea3: inputs[6].value,
                voltaje: inputs[7].value,
                voltaje23: inputs[8].value,
                voltaje31: inputs[9].value,
                idDetalleConsola: idInput == "" || idInput == null ? idDetalleConsola + claveHora : idInput,
                fecha: obtenerFecha("fecha"),
                hora: claveHora + ":00",
                idRegistroConsola: claveRegistro,
                idOperario: idOperario,
                idformatoConsola: idFormatoConsola
            };

            listaDatos.push(dato);
        });

        fetch('@Url.Action("GuardarDatosConsola", "DatosConsola")', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(listaDatos)
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                if (data.respuesta.idRespuesta === 0 || data.respuesta.idRespuesta === 1) {
                    Swal.fire({
                        title: "Success!!",
                        text: "Se guardaron los datos.",
                        icon: "success",
                        button: "Aww yiss!",
                    });
                    
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.respuesta.mensaje,
                        icon: "error",
                        button: "OK",
                    });
                }
            })
            .catch(function (error) {
                console.error("Error:", error);
            });
    }

    function GuardarDatosBAO() {

        var etiquetaIdHora = document.getElementById('idHoraBao');
        var claveHora = etiquetaIdHora.getAttribute('claveRegistro');


        var etiquetaIdRegistro = document.getElementById('idRegistroBAO');
        var claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');

        var listaDetalle = [];

        for (let i = 1; i <= 2; i++) {
            var id = i == 1 ? "Delivered" : "Recived";
            var idEng = document.getElementById(id);

            var idValue = idEng.textContent || idEng.innerText;

            var inputlKvarh = document.getElementById(idValue.substring(0, 2).toLowerCase() + '-kvarh').querySelector('input');
            var inputlKwh = document.getElementById(idValue.substring(0, 2).toLowerCase() + '-kwh').querySelector('input');

            var datos = {
                idOutGoing: datosOperario.IdSitio + "-" + claveRegistro + "-" + idValue.substring(0, 2) + "-" + obtenerFecha("format") + "-" + claveHora,
                idTipoEngine: idValue,
                kWh: parseFloat(inputlKwh.value),
                kVARh: parseFloat(inputlKvarh.value),
                hora: etiquetaIdHora.textContent,
                IdFormatoConsola: idFormatoConsola,
                fecha: obtenerFecha("fecha")
            };
            listaDetalle.push(datos);
        }

        fetch('@Url.Action("GuardarDetalleBAO",  "DatosConsola")', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(listaDetalle)
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                if (data.respuesta.idRespuesta === 0 || data.respuesta.idRespuesta === 1) {
                    Swal.fire({
                        title: "Success!!",
                        text: "Se guardaron los datos.",
                        icon: "success",
                        button: "Aww yiss!",
                    });
                    
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.respuesta.mensaje,
                        icon: "error",
                        button: "OK",
                    });
                }
            })
            .catch(function (error) {
                console.error("Error:", error);
            });

    }

    function GuardarDatosGenerador(tablaId) {

        var filas = document.getElementById(tablaId).querySelectorAll('tbody tr');

        var etiquetaIdHora;
        var etiquetaIdRegistro;
        var claveRegistro;

        if (tablaId == "tabla-Generator1") {
            etiquetaIdRegistro = document.getElementById('idRegistroGen');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
            etiquetaIdHora = document.getElementById('idHoraGen');
        }
        if (tablaId == "tabla-Generator2") {
            etiquetaIdRegistro = document.getElementById('idRegistroGen2');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
            etiquetaIdHora = document.getElementById('idHoraGen2');
        }
        var IdDetGeneratorConsola = datosOperario.IdSitio + '-' + claveRegistro + '-' + obtenerFecha("format") + '-';


        var listDatos = [];

        let numerosFilas = 0;
        filas.forEach(function (fila) {

            numerosFilas++;
            if (numerosFilas >= 13) {
                return;
            }
            var claveHora = fila.getAttribute('claveRegistro');

            var detGeneratorTC = "";
            var listDetGeneratorTC = [];

            var inputl1 = fila.querySelector('#L1 input');
            var inputl2 = fila.querySelector('#L2 input');
            var inputl3 = fila.querySelector('#L3 input');
            var inputD = fila.querySelector('#D input');
            var inputND = fila.querySelector('#ND input');
            var inputTV = fila.querySelector('#TV input');



            for (var i = 0; i < 2; i++) {
                var tablaTc = document.getElementById('tc');
                var inputPresion = tablaTc.querySelector('#row-' + numerosFilas);


                var id = i == 1 ? "A" : "B";

                var inputTpOut = inputPresion.querySelector('#TO-' + id + ' input');
                var inputSpeed = inputPresion.querySelector('#Sp-' + id + ' input');

                detGeneratorTC = {
                    idDetGenerator: datosOperario.IdSitio + '-' + claveRegistro + id + "-" + obtenerFecha("format") + "-" + claveHora,
                    fecha: obtenerFecha("fecha"),
                    idTipoEngine: 'TC' + id,
                    tempOut: ParseIntEmpty(inputTpOut.value),
                    speed: ParseIntEmpty(inputSpeed.value),
                    idDetGeneratorConsola: IdDetGeneratorConsola + claveHora
                };

                listDetGeneratorTC.push(detGeneratorTC);
            }

            var RegistroDatosGenerator = {
                idDetGeneratorConsola: IdDetGeneratorConsola + claveHora,
                hora: claveHora + ":00",
                fecha: obtenerFecha("fecha"),
                l1: ParseIntEmpty(inputl1.value),
                l2: ParseIntEmpty(inputl2.value),
                l3: ParseIntEmpty(inputl3.value),
                d: ParseIntEmpty(inputD.value),
                nD: ParseIntEmpty(inputND.value),
                tersionalVibration: parseFloat(inputTV.value),
                idFormatoConsola: idFormatoConsola,
                detalleGeneradores: listDetGeneratorTC
            };
            listDatos.push(RegistroDatosGenerator);

        });



        fetch('@Url.Action("GuardarDatosGenerador", "DatosConsola")', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(listDatos)
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                if (data.respuesta.idRespuesta === 0 || data.respuesta.idRespuesta === 1) {
                    Swal.fire({
                        title: "Success!!",
                        text: "Se guardaron los datos.",
                        icon: "success",
                        button: "Aww yiss!",
                    });
                    
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.respuesta.mensaje,
                        icon: "error",
                        button: "OK",
                    });
                }
            })
            .catch(function (error) {
                console.error("Error:", error);
            });
    }

    function GuardarDatosEnginer(tablaId) {
        console.log("tablaId : ", tablaId);

        var filas = document.getElementById(tablaId).querySelectorAll('tbody tr');

        var etiquetaIdHora;
        var etiquetaIdRegistro;
        var claveRegistro;

        if (tablaId == "Engine1") {
            etiquetaIdRegistro = document.getElementById('idRegistroEng');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
            console.log("claveRegistro : ", claveRegistro);

        }
        if (tablaId == "Engine2") {
            etiquetaIdRegistro = document.getElementById('idRegistroEng2');
            claveRegistro = etiquetaIdRegistro.getAttribute('claveRegistro');
            console.log("claveRegistro : ", claveRegistro);
        }
        var idDetEngineConsola = datosOperario.IdSitio + "-" + claveRegistro + '-' + obtenerFecha("format") + '-';

        var listDatos = [];
        let numerosFilas = 0;
        filas.forEach(function (fila) {

            numerosFilas++;
            if (numerosFilas >= 13) {
                return;
            }
            var idInput = fila.getAttribute('id');

            var claveHora = fila.getAttribute('claveRegistro');

            var inputRun = fila.querySelector('#Run-H input');
            var inputCA_Temp = fila.querySelector('#CA-T input');
            var inputDiff_P = fila.querySelector('#Diff-P input');
            var inputCa_Press = fila.querySelector('#Ca-P input');
            var inputEx_G = fila.querySelector('#Ex-G input');
            var inputCy_P = fila.querySelector('#Cy-P input');


            var detEngine;
            var listDetEngine = [];

            for (var i = 0; i < 2; i++) {

                var id = i == 1 ? "F" : "O";

                var inputPresion = fila.querySelector('#P-' + id + ' input');
                var inputTemp = fila.querySelector('#T-' + id + ' input');

                detEngine = {
                    idDetEngine: datosOperario.IdSitio + "-" + claveRegistro + "-Eng-" + id + "-" + obtenerFecha("format") + "-" + claveHora,
                    idTipoEngine: id == "F" ? "FUEL" : "OIL",
                    fecha: obtenerFecha("fecha"),
                    presion: ParseIntEmpty(inputPresion.value),
                    temp: ParseIntEmpty(inputTemp.value),
                    idDetEngineConsola: idDetEngineConsola + claveHora
                };

                listDetEngine.push(detEngine);
            }

            var RegistroDatosGenerator = {
                idDetEngineConsola: idInput == "" || idInput == null ? idDetEngineConsola + claveHora : idInput,
                hora: claveHora + ":00",
                runHours: inputRun.value,
                caTemp: inputCA_Temp.value,
                DiffPressJetPulse: inputDiff_P.value,
                CAPress: inputCa_Press.value,
                ExhGasAvgTemp: inputEx_G.value,
                CylPressAvg: inputCy_P.value,
                fecha: obtenerFecha("fecha"),
                IdFormatoConsola: idFormatoConsola,
                detalleEngines: listDetEngine
            };
            listDatos.push(RegistroDatosGenerator);

        });
        
        fetch('@Url.Action("GuardarDatosEngine", "DatosConsola")', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(listDatos)
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                if (data.respuesta.idRespuesta === 0 || data.respuesta.idRespuesta === 1) {
                    Swal.fire({
                        title: "Success!!",
                        text: "Se guardaron los datos.",
                        icon: "success",
                        button: "Aww yiss!",
                    });
                    
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.respuesta.mensaje,
                        icon: "error",
                        button: "OK",
                    });
                }
            })
            .catch(function (error) {
                console.error("Error:", error);
            });
    }

    function ParseIntEmpty(value) {
        return value == "" ? 0 : parseInt(value);
    }

    const thElements = document.querySelectorAll('th');

    thElements.forEach(th => {
        th.addEventListener('mouseover', function () {
            const info = this.getAttribute('data-info');
            if (info != "" && info != null) {
                const tooltip = document.createElement('div');
                tooltip.textContent = info;

                tooltip.style.position = 'absolute';
                tooltip.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
                tooltip.style.color = 'white';
                tooltip.style.padding = '5px';
                tooltip.style.borderRadius = '5px';

                tooltip.style.left = (this.getBoundingClientRect().left + window.scrollX) + 'px';
                tooltip.style.top = (this.getBoundingClientRect().top + window.scrollY - 30) + 'px';

                document.body.appendChild(tooltip);

                this.addEventListener('mouseout', function () {
                    tooltip.remove();
                });
            }
        });
    });


    for (let i = 1; i <= 1; i++) {
        const principalElement = document.querySelector(`.principal${i}`);
        const tablaEG = document.querySelector(`.boton${i}`);

        principalElement.addEventListener("click", () => {
            if (tablaEG.style.display === "none" || tablaEG.style.display === "") {
                tablaEG.style.display = "table";
            } else {
                tablaEG.style.display = "none";
            }
        });
    }

    $(document).ready(function () {
        $("#accordionSidebar").addClass("toggled");
    });

</script>