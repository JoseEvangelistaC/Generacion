@using Generacion.Models.DashBoard;
@using Generacion.Models.Usuario;
@{
    ViewBag.Title = "Dashboard";
    List<DetalleOperario> listaOperario = ViewData["ListaOperarios"] as List<DetalleOperario>;

    Dictionary<decimal, DashboardDetalleFiltro> datosFiltroCentrifugo = ViewData["datosFiltroCentrifugo"] as Dictionary<decimal, DashboardDetalleFiltro>;
    Dictionary<decimal, DashboardDetalleFiltro> datosFiltroAutomatico = ViewData["datosFiltroAutomatico"] as Dictionary<decimal, DashboardDetalleFiltro>;

}
<style>
    .hidden {
        display: none;
    }

    input {
        height: 23px;
        width: 100px;
        border: none;
    }

    .table td, .table th {
        padding: 0rem;
    }

    .table {
        margin: 0;
        color: black;
    }

        .table thead, .table tbody {
            text-align: center;
        }

    .contendor-tablas-iguales {
        display: flex;
        width: 50%;
    }
</style>
<div>
    <div id="div1" style="width: 50%;">
        <table id="FiltroCentrifugo" class="table table-bordered">
            <thead style="text-align: center;">
                <tr>
                    <th rowspan="2">CAMBIO</th>
                    <th colspan="5">FILTRO CENTRIFUGO (1000 Hrs.)</th>
                </tr>
                <tr>
                    <th>UNIDAD</th>
                    <th>FECHA</th>
                    <th>Hrs. OP.</th>
                    <th>ESPESOR</th>
                    <th>EJECUTOR</th>
                </tr>
            </thead>
            <tbody>
                @if (datosFiltroCentrifugo != null && datosFiltroCentrifugo.ContainsKey(1))
                {
                    <tr id="FiltroCentrifugoEG1">
                        <td><input id-class="ProximaHoraCambio" id="ProximaHoraCambio1" type="number" value="@datosFiltroCentrifugo[1].ProximaHoraCambio" disabled></td>
                        <td style="display: flex;padding: 0 0 0 5px;"> EG<input style="width: 50px;" id-class="NumeroGenerador" type="number" min="1" max="2" disabled value="1"></td>
                        <td><input oninput="convertirYMostrarFecha('fechaInput')" id-class="fecha" id="fechaInput" value="@datosFiltroCentrifugo[1].Fecha.Split(' ')[0]"></td>
                        <td><input id-class="HorasOperacion" value="@datosFiltroCentrifugo[1].HorasOperacion" type="number" id="HorasOperacion1" oninput="actualizarProximaHora('1')"></td>
                        <td><input id-class="espesor" value="@datosFiltroCentrifugo[1].Espesor" type="number"></td>
                        <td style="display:flex;">
                            <input id-class="OperadorEjecutor" id="idOperarioEG1" value="@datosFiltroCentrifugo[1].OperadorEjecutor">
                            <select id="ListaOperariosEG1" style="height: 23px">
                                <option value="">-OP-</option>
                                @foreach (var item in listaOperario)
                                {
                                    <option value="@item.IdOperario">@(item.Apellidos + " " + item.Nombre)</option>
                                }
                            </select>
                        </td>
                    </tr>
                }
                else
                {
                    <tr id="FiltroCentrifugoEG1">
                        <td><input id-class="ProximaHoraCambio" id="ProximaHoraCambio1" type="number" disabled></td>
                        <td style="display: flex;padding: 0 0 0 5px;"> EG<input style="width: 50px;" id-class="NumeroGenerador" type="number" min="1" max="2" disabled value="1"></td>
                        <td><input oninput="convertirYMostrarFecha('fechaInput')" id-class="fecha" id="fechaInput"></td>
                        <td><input id-class="HorasOperacion" type="number" id="HorasOperacion1" oninput="actualizarProximaHora('1')"></td>
                        <td><input id-class="espesor" type="number"></td>
                        <td style="display:flex;">
                            <input id-class="OperadorEjecutor" id="idOperarioEG1">
                            <select id="ListaOperariosEG1" style="height: 23px">
                                <option value="">-OP-</option>
                                @foreach (var item in listaOperario)
                                {
                                    <option value="@item.IdOperario">@(item.Apellidos + " " + item.Nombre)</option>
                                }
                            </select>
                        </td>
                    </tr>
                }
                @if (datosFiltroCentrifugo != null && datosFiltroCentrifugo.ContainsKey(2))
                {
                    <tr id="FiltroCentrifugoEG2">
                        <td><input id-class="ProximaHoraCambio" id="ProximaHoraCambio2" type="number" disabled value="@datosFiltroCentrifugo[2].ProximaHoraCambio"></td>
                        <td style="display: flex;padding: 0 0 0 5px;">EG<input type="number" style="width: 50px;" id-class="NumeroGenerador" min="1" max="2" disabled value="2"></td>
                        <td><input oninput="convertirYMostrarFecha('fechaInput2')" id-class="fecha" id="fechaInput2" value="@datosFiltroCentrifugo[2].Fecha.Split(' ')[0]"></td>
                        <td><input id-class="HorasOperacion" type="number" id="HorasOperacion2" oninput="actualizarProximaHora('2')" value="@datosFiltroCentrifugo[2].HorasOperacion"></td>
                        <td><input id-class="espesor" type="number" value="@datosFiltroCentrifugo[2].Espesor"></td>
                        <td style="display:flex;">
                            <input id-class="OperadorEjecutor" id="idOperarioEG2" value="@datosFiltroCentrifugo[2].OperadorEjecutor">
                            <select id="ListaOperariosEG2" style="height: 23px">
                                <option value="">-OP-</option>
                                @foreach (var item in listaOperario)
                                {
                                    <option value="@item.IdOperario">@(item.Apellidos + " " + item.Nombre)</option>
                                }
                            </select>
                        </td>
                    </tr>
                }
                else
                {
                    <tr id="FiltroCentrifugoEG2">
                        <td><input id-class="ProximaHoraCambio" id="ProximaHoraCambio2" type="number" disabled></td>
                        <td style="display: flex;padding: 0 0 0 5px;">EG<input type="number" style="width: 50px;" id-class="NumeroGenerador" min="1" max="2" disabled value="2"></td>
                        <td><input oninput="convertirYMostrarFecha('fechaInput2')" id-class="fecha" id="fechaInput2"></td>
                        <td><input id-class="HorasOperacion" type="number" id="HorasOperacion2" oninput="actualizarProximaHora('2')"></td>
                        <td><input id-class="espesor" type="number"></td>
                        <td style="display:flex;">
                            <input id-class="OperadorEjecutor" id="idOperarioEG2">
                            <select id="ListaOperariosEG2" style="height: 23px">
                                <option value="">-OP-</option>
                                @foreach (var item in listaOperario)
                                {
                                    <option value="@item.IdOperario">@(item.Apellidos + " " + item.Nombre)</option>
                                }
                            </select>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
            <div style="display: flex;text-align: center;">
                <p style="font-weight: bold;color: red;width: 20%;">BESS</p><p style="color: black;width: 80%;font-weight: bold;">DOMINGOS Y FERIADOS NO ACTIVAR</p>
            </div>
        </div>
    </div>
    <div id="div2" class="contendor-tablas-iguales">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Fecha</th>
                    <th colspan="2">HORAS DE BUJÍA</th>
                </tr>
                <tr>
                    <th>EG-1</th>
                    <th>EG-2</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th><input oninput="convertirYMostrarFecha()" id-class="fecha" type="text" /></th>
                    <td><input id-class="" type="number" /></td>
                    <td><input id-class="" type="number" /></td>
                </tr>
            </tbody>
        </table>

        <table id="FiltroAutomatico" class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Fecha</th>
                    <th colspan="2">Filtro Automatico</th>
                </tr>
                @if (datosFiltroAutomatico.ContainsKey(1))
                {
                    <tr>
                        <th>EG-1</th>
                        <th><input id-class="HorasOperacion" type="number" id="HorasOperacion1" value="@datosFiltroAutomatico[1].HorasOperacion" /></th>
                    </tr>
                }
                else
                {
                    <tr>
                        <th>EG-1</th>
                        <th><input id-class="HorasOperacion" type="number" id="HorasOperacion1" /></th>
                    </tr>
                }
            </thead>
            <tbody>

                @if (datosFiltroAutomatico.ContainsKey(2))
                {
                    <tr>
                        <th><input oninput="convertirYMostrarFecha('fechaAutomatico',evento)" id-class="fecha" id="fechaAutomatico" type="text" value="@datosFiltroAutomatico[1].Fecha" /></th>
                        <th>EG-2</th>
                        <td><input id-class="HorasOperacion" type="number" id="HorasOperacion2" value="@datosFiltroAutomatico[2].HorasOperacion" /></td>
                    </tr>
                }
                else
                {
                    <tr>
                        <th><input oninput="convertirYMostrarFecha('fechaAutomatico',evento)" id-class="fechaAutomatico" id="fechaAutomatico" type="text" /></th>
                        <th>EG-2</th>
                        <td><input id-class="HorasOperacion" type="number" id="HorasOperacion2" /></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <button onclick="DatosFiltroAutomatico()">Obtener Valores</button>
</div>


<script>

    function DatosFiltroAutomatico() {
        var tabla = document.getElementById("FiltroAutomatico");

        var valores1 = {};
        var valores2 = {};

        // Obtener todos los elementos input dentro de la tabla
        var inputs = tabla.querySelectorAll('input');

        // Recorrer cada elemento input
        inputs.forEach(function (input) {
            // Obtener el número (1 o 2) del id del input
            var numero = input.id.match(/\d+/);
            console.log("numero :", numero);

            // Verificar si el input tiene un número en su id
            if (numero) {
                // Verificar si es el primer objeto (valores1) o el segundo objeto (valores2)
                if (numero[0] === '1') {
                    valores1[input.getAttribute('id-class')] = input.value;
                } else if (numero[0] === '2') {
                    valores2[input.getAttribute('id-class')] = input.value;
                }
            } else {
                valores1[input.getAttribute('id-class')] = input.value;
                valores2[input.getAttribute('id-class')] = input.value;
            }
        });

        console.log("Valores 1:", valores1);
        console.log("Valores 2:", valores2);
    }








    function actualizarProximaHora(number) {
        var horasOperacion = document.getElementById("HorasOperacion" + number);
        var idOperarioTrabajo = document.getElementById("ProximaHoraCambio" + number);

        idOperarioTrabajo.value = parseInt(horasOperacion.value) + 1000;
    }


    var idOperarioTrabajo = document.getElementById("ListaOperariosEG1");
    idOperarioTrabajo.addEventListener('change', obtenerOperariosSeleccionados);
    var idOperarioTrabajo2 = document.getElementById("ListaOperariosEG2");
    idOperarioTrabajo2.addEventListener('change', obtenerOperariosSeleccionados2);

    function obtenerOperariosSeleccionados() {
        var selectedOption = this.options[this.selectedIndex];
        var id = selectedOption.value;

        if (id != "") {
            var nombreApellido = selectedOption.text.split(' ');
            if (nombreApellido.length < 2) {
                nombreApellido[1] = " ";
            }
            var inputOperario = document.getElementById("idOperarioEG1");

            inputOperario.value = inputOperario.value == "" ? nombreApellido[0][0] + nombreApellido[1][0] : inputOperario.value + '/' + nombreApellido[0][0] + nombreApellido[1][0];
            this.selectedIndex = 0;
        }
    }
    function obtenerOperariosSeleccionados2() {
        var selectedOption = this.options[this.selectedIndex];
        var id = selectedOption.value;

        if (id != "") {
            var nombreApellido = selectedOption.text.split(' ');
            if (nombreApellido.length < 2) {
                nombreApellido[1] = " ";
            }
            var inputOperario = document.getElementById("idOperarioEG2");

            inputOperario.value = inputOperario.value == "" ? nombreApellido[0][0] + nombreApellido[1][0] : inputOperario.value + '/' + nombreApellido[0][0] + nombreApellido[1][0];
            this.selectedIndex = 0;
        }
    }


    //para obtener los valores de los inputs en general
    function guardarDatosFiltro() {
        var datos = DatosFiltro();

        console.log("datos : ", datos);

        fetch('@Url.Action("GuardarDatosDashBoard", "Home")', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(datos)
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                if (data.respuesta.idRespuesta === 0 || data.respuesta.idRespuesta === 1) {
                    Swal.fire({
                        title: "Success!!",
                        text: "Se guardaro los datos.",
                        icon: "success",
                        button: "Aww yiss!"
                    });
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.respuesta.mensaje,
                        icon: "error",
                        button: "OK",
                    });
                }
            })
            .catch(function (error) {
                console.error("Error:", error);
                Swal.fire({
                    title: "Error",
                    text: "Error en la solicitud.",
                    icon: "error",
                    button: "OK",
                });
            });

    }

    function DatosFiltro() {
        var tabla = document.getElementById("FiltroCentrifugo");
        var filasTr = tabla.querySelector('tbody').getElementsByTagName('tr');
        var datos = [];
        for (var i = 0; i < filasTr.length; i++) {
            var valores = obtenerValoresFila(filasTr[i]);
            valores["IdReporteFiltro"] = datosOperario.IdSitio + "-O&M-FOR-01-" + obtenerFecha("format");
            valores["IdDetalleFiltro"] = datosOperario.IdSitio + "-FiltroCentrifugo-" + i + "-" + valores["numeroGenerador"] + "-" + obtenerFecha("format");
            datos.push(valores);
        }
        return datos;
    }



    function obtenerValoresFila(fila) {
        var valores = {};

        for (var i = 0; i < fila.cells.length; i++) {
            var input = fila.cells[i].querySelector('input');
            var idClass = input.getAttribute("id-class");

            if (input.value === "") {
                input.focus();
            } else {
                if (input.type === 'number') {
                    valores[idClass] = parseFloat(input.value);
                } else {
                    valores[idClass] = input.value;
                }
            }
        }

        return valores;
    }


</script>

<script>
    /*
     activar para la continuidad de los divs
    var intervalId;
     var currentDiv = 1;
     var totalDivs = 2; // Actualizar el número total de divs

     window.onload = function () {
         startAutoToggle();
     };

     function toggleVisibility() {
         clearInterval(intervalId);
         currentDiv = (currentDiv % totalDivs) + 1;
         showDiv();
         intervalId = setInterval(function () {
             currentDiv = (currentDiv % totalDivs) + 1;
             showDiv();
         }, 5000);
     }

     function startAutoToggle() {
         intervalId = setInterval(function () {
             currentDiv = (currentDiv % totalDivs) + 1;
             showDiv();
         }, 1000);
     }

     function showDiv() {
         for (var i = 1; i <= totalDivs; i++) {

             var div = document.getElementById('div' + i);
             console.log("div ", div);
             if (i === currentDiv) {
                 div.classList.remove('hidden');
             } else {
                 div.classList.add('hidden');
             }
         }
     }*/
</script>

<script>

    function convertirYMostrarFecha(inputId, evento) {
        var numeroInput = document.getElementById(inputId);

        // Obtener el valor del input y eliminar letras y caracteres no numéricos excepto '/'
        var valorNumerico = numeroInput.value.replace(/[^0-9/]/g, '');

        // Verificar si la tecla presionada es "Eliminar" o "Backspace"
        if (evento && (evento.key === 'Delete' || evento.key === 'Backspace')) {
            // Permitir eliminar el último carácter incluso si es una barra
            if (numeroInput.value.length === 11 && numeroInput.value.charAt(10) === '/') {
                numeroInput.value = numeroInput.value.slice(0, -1);
            }
        } else {
            // Verificar si el valor resultante tiene 8 dígitos
            if (valorNumerico.length === 2 || valorNumerico.length === 5) {
                // Agregar '/' automáticamente después del segundo y quinto dígito
                numeroInput.value = valorNumerico + '/';
            } else if (valorNumerico.length > 10) {
                // Limite la longitud a 10 caracteres (MM/DD/YYYY)
                numeroInput.value = valorNumerico.slice(0, 10);
            }
        }
    }

</script>



